snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
.\] $0
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# snippet / "Fraction" iA
# \\frac{${VISUAL}}{$1}$0
# endsnippet

snippet ooo "Infinity" iA
\infty
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet <- "in" Ai
\in
endsnippet

snippet != "not equal" iA
\neq
endsnippet

snippet <= "leq" iA
\le
endsnippet

snippet >= "geq" iA
\ge
endsnippet

snippet invs "inverse" iA
^{-1}
endsnippet

snippet notin "not in" iA
\not\in
endsnippet


snippet == "align equal" iA
&= $1 \\\\
endsnippet

snippet "part" "partial diff" w
\frac{\partial $1}{\partial $2}
endsnippet

snippet |=> "maps to" iA
\mapsto
endsnippet

snippet ZZ "integers" iA
\mathbb{Z}
endsnippet

snippet sqrt "square root" iA
\sqrt{$1}$0
endsnippet
